<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd">
<!-- escaneo de beans en el paquete com.tienda.main -->
<context:component-scan base-package="com.tienda" />
<!-- soporte para la conversión, formateo y validación en Spring -->
<mvc:annotation-driven/>
<!-- definición de un resolver para las plantillas -->
<bean
class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="prefix" value="/WEB-INF/view/" />
<property name="suffix" value=".jsp" />
</bean>
<!-- define el datasource de la base de datos mediante la librería C3P0 de Hibernate 
-->
<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
destroy-method="close">
<property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/tienda?
useSSL=false&amp;serverTimezone=UTC" />
<property name="user" value="tienda" />
<property name="password" value="tienda" />
<!-- propiedades del pool de conexiones para C3P0 -->
<property name="initialPoolSize" value="5"/>
<property name="minPoolSize" value="5" />
<property name="maxPoolSize" value="20" />
<property name="maxIdleTime" value="30000" />
</bean>
<!-- configura el session factory de Hibernate -->
<bean id="sessionFactory"
class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
<!-- apunta al id del datasource definido previamente -->
<property name="dataSource" ref="dataSource" />
<!-- apunta al paquete que va a contener las entidades -->
<property name="packagesToScan" value="com.tienda.entidades" />
<property name="hibernateProperties">
<props>
<!-- dialecto SQL utilizado por Hibernate (MySQL8Dialect recomendable para
últimas versiones de MySQL y MariaDB)-->
<!-- también puede utilizarse el dialecto MySQL5InnoDBDialect -->
<prop key="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect </prop>
<!-- crea/actualiza las tablas de la base de datos -->
<prop key="hibernate.hbm2ddl.auto">update</prop>
<!-- muestra las consultas SQL realizadas por Hibernate -->
<prop key="hibernate.show_sql">true</prop>
</props>
</property>
</bean>
<!-- configura el transaction manager de Hibernate -->
<bean id="myTransactionManager"
class="org.springframework.orm.hibernate5.HibernateTransactionManager">
<!-- apunta al session factory creado previamente -->
<property name="sessionFactory" ref="sessionFactory"/>
</bean>
<!-- habilita la configuración de anotaciones de transacción -->
<tx:annotation-driven transaction-manager="myTransactionManager" />
<!-- agregar soporte para recursos web: css, images, js, etc ... -->
<mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>
</beans>